name: 'Atlas CLI GitHub Action'
description: 'Use AtlasCLI in your GitHub workflow'
branding:
  icon: 'terminal'
  color: 'green'
inputs:
  version:
    description: Version of the Atlas CLI to install
    required: false
runs:
  using: 'composite'
  steps:
    - name: Find latest tag
      if: -z "${{ inputs.version }}"
      uses: oprypin/find-latest-tag@v1
      id: find-latest-tag
      with:
        repository: mongodb/mongodb-atlas-cli
        releases-only: true
        regex: 'atlascli*'
    - name: Determine tag
      id: determine-tag
      shell: bash
      run: |
        if [ -z "${{ inputs.version }}" ]
        then
          echo "cli-tag=${{ steps.find-latest-tag.outputs.tag }}" >> $GITHUB_OUTPUT
        else
          echo "cli-tag=atlascli/${{ inputs.version }}" >> $GITHUB_OUTPUT
        fi

    - name: Download release
      uses: robinraju/release-downloader@v1.8
      with:
        repository: mongodb/mongodb-atlas-cli
        tag: ${{ steps.determine-tag.outputs.cli-tag }}
        fileName: 'mongodb-atlas-cli*linux_x86_64.deb'
    - name: Print latest tag
      shell: bash
      run: echo "CLI is at version ${{ steps.determine-tag.outputs.cli-tag }}"
    - name: Check Atlas CLI is in the $PATH
      id: check_path
      shell: bash
      run: |
        if ! which atlas >/dev/null 2>&1; then
          # execute the following step only if the binary is not in PATH
          echo "atlas-installed=0" >> $GITHUB_OUTPUT
        exit 0
        fi
        echo "atlas-installed=1" >> $GITHUB_OUTPUT

    - name: Install Go
      if: steps.check_path.outputs.atlas-installed == 0
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Checkout repository
      if: steps.check_path.outputs.atlas-installed == 0
      uses: actions/checkout@v3
      with:
        repository: mongodb/mongodb-atlas-cli
        # ref: ${{ steps.determine-tag.outputs.cli-tag }}"
        ref: atlascli/1.10.0

    - name: Build AtlasCLI
      if: steps.check_path.outputs.atlas-installed == 0
      shell: bash
      run: make build-atlascli

    - name: Add Atlas CLI to $PATH
      if: steps.check_path.outputs.atlas-installed == 0
      shell: bash
      run: |
        chmod +x bin/atlas
        mkdir -p $HOME/.local/bin
        mv bin/atlas $HOME/.local/bin
        echo "$HOME/.local/bin" >> $GITHUB_PATH 
